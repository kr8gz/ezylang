 print("
  Range function - range(1, 11, 2)
 ")

  range = func([0 0 1] "
   ? .[0] << .[1]} {
     print($.[0]})
      .(.[0] + .[2]} .[1] .[2])
    ?
  ")

  minirange == func([0 0 1]"?.[0]<<.[1]}{print($.[0]}).(.[0]+.[2]}.[1].[2])?")

 range(1 11 2)

 ##############################

 print("
  Print Fibonacci numbers
 ")

  fibo = func([1 1] "
   ? .[0] < 100000} {
     print($.[0]})
      .(.[1] .[0] + .[1]})
    ?
  ")

  minifibo == func([1 1]"?.[0]<100000}{print($.[0]}).(.[1].[0]+.[1]})?")

 fibo()

 ##############################

 print("
  Print numbers from 1 to 10
 ")

  count10 = func([1] "
   ? .[0] < 10} {
     print($ .[0]})
      .(.[0] + 1})
    ?
  ")

  minicount10 == func([1]"?.[0]<10}{print($.[0]}).(.[0]+1})?")

 count10()

 ##############################

 print("
  Factorial - 8!
 ")

  factorial = func([1] "
   ? .[0] \= 0} {
    <- 1;
   !
    <- .[0] * .(.[0] - 1})};
   ?
  ")

  minifactorial == func([1]"?.[0]\=0}{<-1;!<-.[0]*.(.[0]-1})};?")

 print($factorial(8)})

 ##############################

 print("
  For loop (print each element)
 ")

  forprint = func([[] 0] "
   ? len(.[0]) >> .[1]} {
     print($.[0][.[1]]})
      .(.[0].[1] + 1})
    ?
  ")

  miniforprint == func([[]0]"?len(.[0])>>.[1]}{print($.[0][.[1]]}).(.[0].[1]+1})?")

 forprint([1 2 3])

 ##############################

 print("
  For loop (multiply each element by 3)
 ")

  forx3 = func([[] 0, []] "
   ? len(.[0]) >> .[1]} {
      <- .(
             .[0]
              .[1] + 1}
             .[2] +, [.[0][.[1]] * 3}]}
         )
    !
     <- .[2]
   ?
  ")

  miniforx3 == func([[]0,[]]"?len(.[0])>>.[1]}{<-.(.[0].[1]+1}.[2]+,[.[0][.[1]]*3}]});!<-.[2];?")

 print($forx3([1 2 3])})